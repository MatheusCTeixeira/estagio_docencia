datatype lexresult = Lit of int
                   | Add | Sub | Mul | Div
                   | EOF | LPar | RPar | Minus;
                         
(* val lex = Mlex.makeLexer(fn x:int => valOf(TextIO.inputLine TextIO.stdIn)); *)
fun toInt s =
    case Int.fromString s of
         SOME i => i
       | NONE => 0;

val linenum = ref 1
val error = fn x => print(x)
val eof = fn () => EOF

%%

alpha=[A-Za-z];
digit=[0-9];
ws = [\ \t];

%%
    
{ws}+    => (lex());
{digit}+ => (Lit(toInt(yytext)));
"+" => (Add);
"-" => (Sub);
"/" => (Div);
"*" => (Mul);
"(" => (LPar);
")" => (RPar);
